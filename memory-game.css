@keyframes unflipped {
	0% {
		transform: rotateY(180deg) scale(1);
	}

	50% {
		transform: rotateY(90deg) scale(1.03125);
	}

	100% {
		transform: rotateY(0deg) scale(1);
	}
}

@keyframes flipped {
	0% {
		transform: rotateY(0deg) scale(1);
	}

	50% {
		transform: rotateY(90deg) scale(1.03125);
	}

	100% {
		transform: rotateY(180deg) scale(1);
	}
}

@keyframes matched {
	0% {
		transform: rotateY(180deg) scale(1);
	}

	50% {
		transform: rotateY(360deg) scale(1.03125);
	}

	100% {
		transform: rotateY(540deg) scale(1);
	}
}

@keyframes completed {
	0% {
		transform: rotateY(540deg) scale(1);
	}

	50% {
		transform: rotateY(1080deg) scale(1.03125);
	}

	100% {
		transform: rotateY(1620deg) scale(1);
	}
}

* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
	font: inherit;
	max-inline-size: 100%;
	touch-action: manipulation;
}

:host {
	display: grid;
	block-size: 100%;
	inline-size: 100%;
	container-type: size;
	place-content: safe center;
}

memory-game {
	max-inline-size: 100cqi;
	padding-block: var(--gap);
	display: grid;
	place-content: safe center;
	max-block-size: 100cqb;
	gap: var(--gap);
	grid-template-columns: repeat(var(--columns), 1fr);

	--gap: 1.5cqmin;
	--columns: 1;

	@container (aspect-ratio <= 10/42) {
		inline-size: 100cqi;
		aspect-ratio: 10/42;

		--columns: 2;
	}

	@container (aspect-ratio > 10/42) and (aspect-ratio <= 15/28) {
		inline-size: 100cqi;
		aspect-ratio: 15/28;

		--columns: 3;
	}

	@container (aspect-ratio > 15/28) and (aspect-ratio <= 20/21) {
		block-size: 100cqb;
		aspect-ratio: 20/21;

		--columns: 4;
	}

	@container (aspect-ratio > 20/21) {
		block-size: 100cqb;
		aspect-ratio: 30/14;

		--columns: 6;
	}
}

button {
	appearance: none;
	border: none;
	border-radius: 0.5rem;
	display: block;
	position: relative;
	inline-size: auto;
	aspect-ratio: 5 / 7;
	background: color-mix(in lch, var(--purple), oklch(100% 0 0) 50%);

	&:where(:empty) {
		border-radius: 0.5rem;
		box-shadow: 0 0 0.5cqmin 0
			color-mix(in lch, var(--purple), oklch(0% 0 0) 75%);
		background: var(--purple);
		font-size: calc(45cqi / var(--columns));
		block-size: 100%;
		inline-size: 100%;
		display: block;
		place-content: center;

		&::before {
			content: "ðŸ¦‰";
		}
	}
}

dialog:where([open]) {
	border: none;
	display: grid;
	place-content: center;
	background: color-mix(in lch, var(--purple), oklch(100% 0 0) 25%);
	padding: 0.5rem;
	border-radius: 0.5rem;
	position: absolute;
	margin: auto;

	&::backdrop {
		background-color: color-mix(in lch, var(--purple), oklch(0% 0 0 / 0.5) 75%);
	}

	:where(button) {
		display: flex;
		appearance: none;
		border: none;
		padding: 0.5rem;
		background: var(--purple);
		color: color-mix(in lch, var(--purple), oklch(0% 0 0) 50%);
		box-shadow: 0 0 0.5cqmin 0
			color-mix(in lch, var(--purple), oklch(0% 0 0) 75%);
		border-radius: 0.5rem;
		aspect-ratio: 1;
	}

	:where(svg) {
		block-size: 2rem;
		fill: currentColor;
		stroke: color-mix(in lch, var(--purple), oklch(0% 0 0) 60%);
		stroke-width: 1px;
	}
}

.faces {
	position: absolute;
	inset-inline-start: 0;
	inset-block-start: 0;
	border-radius: 0.5rem;
	font-size: calc(45cqi / var(--columns));
	block-size: 100%;
	inline-size: 100%;
	transform-style: preserve-3d;
	animation-timing-function: linear;
	animation-fill-mode: forwards;

	:where(.unflipped) & {
		transform: rotateY(180deg) scale(1);
		animation-name: unflipped;
		animation-duration: 0.2s;
		animation-delay: 1s;
	}

	:where(.flipped) & {
		animation-name: flipped;
		animation-duration: 0.2s;
		animation-delay: 0s;
	}

	:where(.matched) & {
		transform: rotateY(180deg) scale(1);
		animation-name: matched;
		animation-duration: 0.6s;
		animation-delay: 0s;
	}

	:where(.completed) & {
		transform: rotateY(540deg) scale(1);
		animation-name: completed;
		animation-duration: 1.8s;
		animation-delay: 0s;
	}
}

.front,
.back {
	display: grid;
	place-content: center;
	position: absolute;
	inset-inline-start: 0;
	inset-block-start: 0;
	block-size: 100%;
	inline-size: 100%;
	border-radius: 0.5rem;
	user-select: none;
	-webkit-user-select: none;
}

.front {
	backface-visibility: hidden;
	background: var(--purple);
	box-shadow: 0 0 0.5cqmin 0 color-mix(in lch, var(--purple), oklch(0% 0 0) 75%);
}

.back {
	backface-visibility: hidden;
	transform: rotateY(180deg);
	background: var(--back-background);
	box-shadow: 0 0 0.5cqmin 0
		color-mix(in lch, var(--back-background), oklch(0% 0 0) 75%);
}
